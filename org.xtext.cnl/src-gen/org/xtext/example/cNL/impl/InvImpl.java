/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.cNL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.cNL.CNLPackage;
import org.xtext.example.cNL.DelFin;
import org.xtext.example.cNL.Inv;
import org.xtext.example.cNL.RelRea;
import org.xtext.example.cNL.SentenceDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Inv</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.cNL.impl.InvImpl#getInv <em>Inv</em>}</li>
 *   <li>{@link org.xtext.example.cNL.impl.InvImpl#getDelay_final <em>Delay final</em>}</li>
 *   <li>{@link org.xtext.example.cNL.impl.InvImpl#getRelease_reaction <em>Release reaction</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InvImpl extends MinimalEObjectImpl.Container implements Inv
{
  /**
   * The cached value of the '{@link #getInv() <em>Inv</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInv()
   * @generated
   * @ordered
   */
  protected SentenceDeclaration inv;

  /**
   * The cached value of the '{@link #getDelay_final() <em>Delay final</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDelay_final()
   * @generated
   * @ordered
   */
  protected DelFin delay_final;

  /**
   * The cached value of the '{@link #getRelease_reaction() <em>Release reaction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelease_reaction()
   * @generated
   * @ordered
   */
  protected RelRea release_reaction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InvImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CNLPackage.Literals.INV;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceDeclaration getInv()
  {
    if (inv != null && inv.eIsProxy())
    {
      InternalEObject oldInv = (InternalEObject)inv;
      inv = (SentenceDeclaration)eResolveProxy(oldInv);
      if (inv != oldInv)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, CNLPackage.INV__INV, oldInv, inv));
      }
    }
    return inv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SentenceDeclaration basicGetInv()
  {
    return inv;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInv(SentenceDeclaration newInv)
  {
    SentenceDeclaration oldInv = inv;
    inv = newInv;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CNLPackage.INV__INV, oldInv, inv));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DelFin getDelay_final()
  {
    return delay_final;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDelay_final(DelFin newDelay_final, NotificationChain msgs)
  {
    DelFin oldDelay_final = delay_final;
    delay_final = newDelay_final;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CNLPackage.INV__DELAY_FINAL, oldDelay_final, newDelay_final);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDelay_final(DelFin newDelay_final)
  {
    if (newDelay_final != delay_final)
    {
      NotificationChain msgs = null;
      if (delay_final != null)
        msgs = ((InternalEObject)delay_final).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CNLPackage.INV__DELAY_FINAL, null, msgs);
      if (newDelay_final != null)
        msgs = ((InternalEObject)newDelay_final).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CNLPackage.INV__DELAY_FINAL, null, msgs);
      msgs = basicSetDelay_final(newDelay_final, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CNLPackage.INV__DELAY_FINAL, newDelay_final, newDelay_final));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelRea getRelease_reaction()
  {
    return release_reaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelease_reaction(RelRea newRelease_reaction, NotificationChain msgs)
  {
    RelRea oldRelease_reaction = release_reaction;
    release_reaction = newRelease_reaction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CNLPackage.INV__RELEASE_REACTION, oldRelease_reaction, newRelease_reaction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelease_reaction(RelRea newRelease_reaction)
  {
    if (newRelease_reaction != release_reaction)
    {
      NotificationChain msgs = null;
      if (release_reaction != null)
        msgs = ((InternalEObject)release_reaction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CNLPackage.INV__RELEASE_REACTION, null, msgs);
      if (newRelease_reaction != null)
        msgs = ((InternalEObject)newRelease_reaction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CNLPackage.INV__RELEASE_REACTION, null, msgs);
      msgs = basicSetRelease_reaction(newRelease_reaction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CNLPackage.INV__RELEASE_REACTION, newRelease_reaction, newRelease_reaction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CNLPackage.INV__DELAY_FINAL:
        return basicSetDelay_final(null, msgs);
      case CNLPackage.INV__RELEASE_REACTION:
        return basicSetRelease_reaction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CNLPackage.INV__INV:
        if (resolve) return getInv();
        return basicGetInv();
      case CNLPackage.INV__DELAY_FINAL:
        return getDelay_final();
      case CNLPackage.INV__RELEASE_REACTION:
        return getRelease_reaction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CNLPackage.INV__INV:
        setInv((SentenceDeclaration)newValue);
        return;
      case CNLPackage.INV__DELAY_FINAL:
        setDelay_final((DelFin)newValue);
        return;
      case CNLPackage.INV__RELEASE_REACTION:
        setRelease_reaction((RelRea)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CNLPackage.INV__INV:
        setInv((SentenceDeclaration)null);
        return;
      case CNLPackage.INV__DELAY_FINAL:
        setDelay_final((DelFin)null);
        return;
      case CNLPackage.INV__RELEASE_REACTION:
        setRelease_reaction((RelRea)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CNLPackage.INV__INV:
        return inv != null;
      case CNLPackage.INV__DELAY_FINAL:
        return delay_final != null;
      case CNLPackage.INV__RELEASE_REACTION:
        return release_reaction != null;
    }
    return super.eIsSet(featureID);
  }

} //InvImpl
