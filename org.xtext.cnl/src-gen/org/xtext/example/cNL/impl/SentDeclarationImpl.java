/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.cNL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.cNL.CNLPackage;
import org.xtext.example.cNL.SentDeclaration;
import org.xtext.example.cNL.SentenceDeclaration;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sent Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.cNL.impl.SentDeclarationImpl#getDeclarationName <em>Declaration Name</em>}</li>
 *   <li>{@link org.xtext.example.cNL.impl.SentDeclarationImpl#getSentenceDeclaration <em>Sentence Declaration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SentDeclarationImpl extends MinimalEObjectImpl.Container implements SentDeclaration
{
  /**
   * The default value of the '{@link #getDeclarationName() <em>Declaration Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarationName()
   * @generated
   * @ordered
   */
  protected static final String DECLARATION_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDeclarationName() <em>Declaration Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarationName()
   * @generated
   * @ordered
   */
  protected String declarationName = DECLARATION_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSentenceDeclaration() <em>Sentence Declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSentenceDeclaration()
   * @generated
   * @ordered
   */
  protected SentenceDeclaration sentenceDeclaration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SentDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CNLPackage.Literals.SENT_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDeclarationName()
  {
    return declarationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeclarationName(String newDeclarationName)
  {
    String oldDeclarationName = declarationName;
    declarationName = newDeclarationName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CNLPackage.SENT_DECLARATION__DECLARATION_NAME, oldDeclarationName, declarationName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SentenceDeclaration getSentenceDeclaration()
  {
    return sentenceDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSentenceDeclaration(SentenceDeclaration newSentenceDeclaration, NotificationChain msgs)
  {
    SentenceDeclaration oldSentenceDeclaration = sentenceDeclaration;
    sentenceDeclaration = newSentenceDeclaration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION, oldSentenceDeclaration, newSentenceDeclaration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSentenceDeclaration(SentenceDeclaration newSentenceDeclaration)
  {
    if (newSentenceDeclaration != sentenceDeclaration)
    {
      NotificationChain msgs = null;
      if (sentenceDeclaration != null)
        msgs = ((InternalEObject)sentenceDeclaration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION, null, msgs);
      if (newSentenceDeclaration != null)
        msgs = ((InternalEObject)newSentenceDeclaration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION, null, msgs);
      msgs = basicSetSentenceDeclaration(newSentenceDeclaration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION, newSentenceDeclaration, newSentenceDeclaration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION:
        return basicSetSentenceDeclaration(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CNLPackage.SENT_DECLARATION__DECLARATION_NAME:
        return getDeclarationName();
      case CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION:
        return getSentenceDeclaration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CNLPackage.SENT_DECLARATION__DECLARATION_NAME:
        setDeclarationName((String)newValue);
        return;
      case CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION:
        setSentenceDeclaration((SentenceDeclaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CNLPackage.SENT_DECLARATION__DECLARATION_NAME:
        setDeclarationName(DECLARATION_NAME_EDEFAULT);
        return;
      case CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION:
        setSentenceDeclaration((SentenceDeclaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CNLPackage.SENT_DECLARATION__DECLARATION_NAME:
        return DECLARATION_NAME_EDEFAULT == null ? declarationName != null : !DECLARATION_NAME_EDEFAULT.equals(declarationName);
      case CNLPackage.SENT_DECLARATION__SENTENCE_DECLARATION:
        return sentenceDeclaration != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (DeclarationName: ");
    result.append(declarationName);
    result.append(')');
    return result.toString();
  }

} //SentDeclarationImpl
