/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.cNL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.cNL.CNLFactory
 * @model kind="package"
 * @generated
 */
public interface CNLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "cNL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/CNL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "cNL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  CNLPackage eINSTANCE = org.xtext.example.cNL.impl.CNLPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.ModelImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Decl Var Input</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__DECL_VAR_INPUT = 0;

  /**
   * The feature id for the '<em><b>Decl Var Output</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__DECL_VAR_OUTPUT = 1;

  /**
   * The feature id for the '<em><b>Sent Declaration</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__SENT_DECLARATION = 2;

  /**
   * The feature id for the '<em><b>Req Declaration</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__REQ_DECLARATION = 3;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.DeclVarInputImpl <em>Decl Var Input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.DeclVarInputImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDeclVarInput()
   * @generated
   */
  int DECL_VAR_INPUT = 1;

  /**
   * The feature id for the '<em><b>Var Decls</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_VAR_INPUT__VAR_DECLS = 0;

  /**
   * The number of structural features of the '<em>Decl Var Input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_VAR_INPUT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.DeclVarOutputImpl <em>Decl Var Output</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.DeclVarOutputImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDeclVarOutput()
   * @generated
   */
  int DECL_VAR_OUTPUT = 2;

  /**
   * The feature id for the '<em><b>Var Decls</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_VAR_OUTPUT__VAR_DECLS = 0;

  /**
   * The number of structural features of the '<em>Decl Var Output</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECL_VAR_OUTPUT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.VarDeclarationImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__TYPE = 1;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.SentDeclarationImpl <em>Sent Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.SentDeclarationImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getSentDeclaration()
   * @generated
   */
  int SENT_DECLARATION = 4;

  /**
   * The feature id for the '<em><b>Declaration Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENT_DECLARATION__DECLARATION_NAME = 0;

  /**
   * The feature id for the '<em><b>Sentence Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENT_DECLARATION__SENTENCE_DECLARATION = 1;

  /**
   * The number of structural features of the '<em>Sent Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENT_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.SentenceDeclarationImpl <em>Sentence Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.SentenceDeclarationImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getSentenceDeclaration()
   * @generated
   */
  int SENTENCE_DECLARATION = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENTENCE_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Logic Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENTENCE_DECLARATION__LOGIC_EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Sentence Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENTENCE_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.ExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 6;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OR_OP = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.XorExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getXorExpression()
   * @generated
   */
  int XOR_EXPRESSION = 7;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__OR_OP = EXPRESSION__OR_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Xor Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.AndExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LEFT = XOR_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__OR_OP = XOR_EXPRESSION__OR_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RIGHT = XOR_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>And Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__AND_OP = XOR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = XOR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.CompExpressionImpl <em>Comp Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.CompExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getCompExpression()
   * @generated
   */
  int COMP_EXPRESSION = 9;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__LEFT = AND_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__OR_OP = AND_EXPRESSION__OR_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__RIGHT = AND_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>And Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__AND_OP = AND_EXPRESSION__AND_OP;

  /**
   * The feature id for the '<em><b>Comp Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__COMP_OP = AND_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Comp Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION_FEATURE_COUNT = AND_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.EquExpressionImpl <em>Equ Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.EquExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getEquExpression()
   * @generated
   */
  int EQU_EXPRESSION = 10;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__LEFT = COMP_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__OR_OP = COMP_EXPRESSION__OR_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__RIGHT = COMP_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>And Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__AND_OP = COMP_EXPRESSION__AND_OP;

  /**
   * The feature id for the '<em><b>Comp Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__COMP_OP = COMP_EXPRESSION__COMP_OP;

  /**
   * The feature id for the '<em><b>Equ Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__EQU_OP = COMP_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Equ Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION_FEATURE_COUNT = COMP_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.UnExpressionImpl <em>Un Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.UnExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getUnExpression()
   * @generated
   */
  int UN_EXPRESSION = 11;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__LEFT = EQU_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__OR_OP = EQU_EXPRESSION__OR_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__RIGHT = EQU_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>And Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__AND_OP = EQU_EXPRESSION__AND_OP;

  /**
   * The feature id for the '<em><b>Comp Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__COMP_OP = EQU_EXPRESSION__COMP_OP;

  /**
   * The feature id for the '<em><b>Equ Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__EQU_OP = EQU_EXPRESSION__EQU_OP;

  /**
   * The feature id for the '<em><b>Un Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION__UN_OP = EQU_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Un Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UN_EXPRESSION_FEATURE_COUNT = EQU_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.TauExpressionImpl <em>Tau Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.TauExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getTauExpression()
   * @generated
   */
  int TAU_EXPRESSION = 12;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAU_EXPRESSION__TIME = 0;

  /**
   * The number of structural features of the '<em>Tau Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAU_EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.TimeLiteralImpl <em>Time Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.TimeLiteralImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getTimeLiteral()
   * @generated
   */
  int TIME_LITERAL = 13;

  /**
   * The feature id for the '<em><b>Interval</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_LITERAL__INTERVAL = 0;

  /**
   * The number of structural features of the '<em>Time Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_LITERAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.PrimaryExpressionImpl <em>Primary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.PrimaryExpressionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getPrimaryExpression()
   * @generated
   */
  int PRIMARY_EXPRESSION = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__LEFT = UN_EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Or Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__OR_OP = UN_EXPRESSION__OR_OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__RIGHT = UN_EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>And Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__AND_OP = UN_EXPRESSION__AND_OP;

  /**
   * The feature id for the '<em><b>Comp Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__COMP_OP = UN_EXPRESSION__COMP_OP;

  /**
   * The feature id for the '<em><b>Equ Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__EQU_OP = UN_EXPRESSION__EQU_OP;

  /**
   * The feature id for the '<em><b>Un Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__UN_OP = UN_EXPRESSION__UN_OP;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__NAME = UN_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Constant</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__CONSTANT = UN_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Tau</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__TAU = UN_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Nest Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION__NEST_EXPR = UN_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Primary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION_FEATURE_COUNT = UN_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.ReqDeclarationImpl <em>Req Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.ReqDeclarationImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getReqDeclaration()
   * @generated
   */
  int REQ_DECLARATION = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQ_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Requirement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQ_DECLARATION__REQUIREMENT = 1;

  /**
   * The number of structural features of the '<em>Req Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQ_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.RequirementImpl <em>Requirement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.RequirementImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRequirement()
   * @generated
   */
  int REQUIREMENT = 16;

  /**
   * The feature id for the '<em><b>Trigger</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT__TRIGGER = 0;

  /**
   * The feature id for the '<em><b>Invariant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT__INVARIANT = 1;

  /**
   * The number of structural features of the '<em>Requirement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.TrigImpl <em>Trig</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.TrigImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getTrig()
   * @generated
   */
  int TRIG = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIG__NAME = 0;

  /**
   * The feature id for the '<em><b>Invariant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIG__INVARIANT = 1;

  /**
   * The feature id for the '<em><b>Release reaction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIG__RELEASE_REACTION = 2;

  /**
   * The feature id for the '<em><b>Delay final</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIG__DELAY_FINAL = 3;

  /**
   * The number of structural features of the '<em>Trig</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRIG_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.InvImpl <em>Inv</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.InvImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getInv()
   * @generated
   */
  int INV = 18;

  /**
   * The feature id for the '<em><b>Inv</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV__INV = 0;

  /**
   * The feature id for the '<em><b>Delay final</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV__DELAY_FINAL = 1;

  /**
   * The feature id for the '<em><b>Release reaction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV__RELEASE_REACTION = 2;

  /**
   * The number of structural features of the '<em>Inv</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.Inv_alwaysImpl <em>Inv always</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.Inv_alwaysImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getInv_always()
   * @generated
   */
  int INV_ALWAYS = 19;

  /**
   * The feature id for the '<em><b>Inv</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV_ALWAYS__INV = 0;

  /**
   * The feature id for the '<em><b>Release reaction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV_ALWAYS__RELEASE_REACTION = 1;

  /**
   * The number of structural features of the '<em>Inv always</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INV_ALWAYS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.RelReaImpl <em>Rel Rea</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.RelReaImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRelRea()
   * @generated
   */
  int REL_REA = 20;

  /**
   * The feature id for the '<em><b>Reaction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL_REA__REACTION = 0;

  /**
   * The feature id for the '<em><b>Delay final</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL_REA__DELAY_FINAL = 1;

  /**
   * The number of structural features of the '<em>Rel Rea</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL_REA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.ReactionImpl <em>Reaction</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.ReactionImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getReaction()
   * @generated
   */
  int REACTION = 21;

  /**
   * The number of structural features of the '<em>Reaction</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REACTION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.DelFinImpl <em>Del Fin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.DelFinImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDelFin()
   * @generated
   */
  int DEL_FIN = 22;

  /**
   * The number of structural features of the '<em>Del Fin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEL_FIN_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.DelayImpl <em>Delay</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.DelayImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDelay()
   * @generated
   */
  int DELAY = 23;

  /**
   * The number of structural features of the '<em>Delay</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELAY_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.RelImpl <em>Rel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.RelImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRel()
   * @generated
   */
  int REL = 24;

  /**
   * The feature id for the '<em><b>Reaction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL__REACTION = REL_REA__REACTION;

  /**
   * The feature id for the '<em><b>Delay final</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL__DELAY_FINAL = REL_REA__DELAY_FINAL;

  /**
   * The feature id for the '<em><b>Rel</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL__REL = REL_REA_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Rel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REL_FEATURE_COUNT = REL_REA_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.ReaImpl <em>Rea</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.ReaImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRea()
   * @generated
   */
  int REA = 25;

  /**
   * The feature id for the '<em><b>Reaction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REA__REACTION = REL_REA__REACTION;

  /**
   * The feature id for the '<em><b>Delay final</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REA__DELAY_FINAL = REL_REA__DELAY_FINAL;

  /**
   * The feature id for the '<em><b>Rea</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REA__REA = REL_REA_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Rea</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REA_FEATURE_COUNT = REL_REA_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.SentenceImpl <em>Sentence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.SentenceImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getSentence()
   * @generated
   */
  int SENTENCE = 26;

  /**
   * The feature id for the '<em><b>Delay</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENTENCE__DELAY = DEL_FIN_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Fin</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENTENCE__FIN = DEL_FIN_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Sentence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SENTENCE_FEATURE_COUNT = DEL_FIN_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.impl.DelImpl <em>Del</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.impl.DelImpl
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDel()
   * @generated
   */
  int DEL = 27;

  /**
   * The feature id for the '<em><b>Del</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEL__DEL = DELAY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Del</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEL_FEATURE_COUNT = DELAY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.EquOperator <em>Equ Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.EquOperator
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getEquOperator()
   * @generated
   */
  int EQU_OPERATOR = 28;

  /**
   * The meta object id for the '{@link org.xtext.example.cNL.CompOperator <em>Comp Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.cNL.CompOperator
   * @see org.xtext.example.cNL.impl.CNLPackageImpl#getCompOperator()
   * @generated
   */
  int COMP_OPERATOR = 29;


  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.example.cNL.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.cNL.Model#getDeclVarInput <em>Decl Var Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Decl Var Input</em>'.
   * @see org.xtext.example.cNL.Model#getDeclVarInput()
   * @see #getModel()
   * @generated
   */
  EReference getModel_DeclVarInput();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.cNL.Model#getDeclVarOutput <em>Decl Var Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Decl Var Output</em>'.
   * @see org.xtext.example.cNL.Model#getDeclVarOutput()
   * @see #getModel()
   * @generated
   */
  EReference getModel_DeclVarOutput();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.cNL.Model#getSentDeclaration <em>Sent Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sent Declaration</em>'.
   * @see org.xtext.example.cNL.Model#getSentDeclaration()
   * @see #getModel()
   * @generated
   */
  EReference getModel_SentDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.cNL.Model#getReqDeclaration <em>Req Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Req Declaration</em>'.
   * @see org.xtext.example.cNL.Model#getReqDeclaration()
   * @see #getModel()
   * @generated
   */
  EReference getModel_ReqDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.DeclVarInput <em>Decl Var Input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decl Var Input</em>'.
   * @see org.xtext.example.cNL.DeclVarInput
   * @generated
   */
  EClass getDeclVarInput();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.cNL.DeclVarInput#getVarDecls <em>Var Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var Decls</em>'.
   * @see org.xtext.example.cNL.DeclVarInput#getVarDecls()
   * @see #getDeclVarInput()
   * @generated
   */
  EReference getDeclVarInput_VarDecls();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.DeclVarOutput <em>Decl Var Output</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Decl Var Output</em>'.
   * @see org.xtext.example.cNL.DeclVarOutput
   * @generated
   */
  EClass getDeclVarOutput();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.cNL.DeclVarOutput#getVarDecls <em>Var Decls</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Var Decls</em>'.
   * @see org.xtext.example.cNL.DeclVarOutput#getVarDecls()
   * @see #getDeclVarOutput()
   * @generated
   */
  EReference getDeclVarOutput_VarDecls();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.xtext.example.cNL.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.VarDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.cNL.VarDeclaration#getName()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.VarDeclaration#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.example.cNL.VarDeclaration#getType()
   * @see #getVarDeclaration()
   * @generated
   */
  EAttribute getVarDeclaration_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.SentDeclaration <em>Sent Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sent Declaration</em>'.
   * @see org.xtext.example.cNL.SentDeclaration
   * @generated
   */
  EClass getSentDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.SentDeclaration#getDeclarationName <em>Declaration Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Declaration Name</em>'.
   * @see org.xtext.example.cNL.SentDeclaration#getDeclarationName()
   * @see #getSentDeclaration()
   * @generated
   */
  EAttribute getSentDeclaration_DeclarationName();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.SentDeclaration#getSentenceDeclaration <em>Sentence Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sentence Declaration</em>'.
   * @see org.xtext.example.cNL.SentDeclaration#getSentenceDeclaration()
   * @see #getSentDeclaration()
   * @generated
   */
  EReference getSentDeclaration_SentenceDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.SentenceDeclaration <em>Sentence Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sentence Declaration</em>'.
   * @see org.xtext.example.cNL.SentenceDeclaration
   * @generated
   */
  EClass getSentenceDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.SentenceDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.cNL.SentenceDeclaration#getName()
   * @see #getSentenceDeclaration()
   * @generated
   */
  EAttribute getSentenceDeclaration_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.SentenceDeclaration#getLogicExpression <em>Logic Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Logic Expression</em>'.
   * @see org.xtext.example.cNL.SentenceDeclaration#getLogicExpression()
   * @see #getSentenceDeclaration()
   * @generated
   */
  EReference getSentenceDeclaration_LogicExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.xtext.example.cNL.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Expression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.cNL.Expression#getLeft()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.Expression#getOrOp <em>Or Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Or Op</em>'.
   * @see org.xtext.example.cNL.Expression#getOrOp()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_OrOp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Expression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.cNL.Expression#getRight()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.XorExpression <em>Xor Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Xor Expression</em>'.
   * @see org.xtext.example.cNL.XorExpression
   * @generated
   */
  EClass getXorExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see org.xtext.example.cNL.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.AndExpression#getAndOp <em>And Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>And Op</em>'.
   * @see org.xtext.example.cNL.AndExpression#getAndOp()
   * @see #getAndExpression()
   * @generated
   */
  EAttribute getAndExpression_AndOp();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.CompExpression <em>Comp Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comp Expression</em>'.
   * @see org.xtext.example.cNL.CompExpression
   * @generated
   */
  EClass getCompExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.CompExpression#getCompOp <em>Comp Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comp Op</em>'.
   * @see org.xtext.example.cNL.CompExpression#getCompOp()
   * @see #getCompExpression()
   * @generated
   */
  EAttribute getCompExpression_CompOp();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.EquExpression <em>Equ Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equ Expression</em>'.
   * @see org.xtext.example.cNL.EquExpression
   * @generated
   */
  EClass getEquExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.EquExpression#getEquOp <em>Equ Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Equ Op</em>'.
   * @see org.xtext.example.cNL.EquExpression#getEquOp()
   * @see #getEquExpression()
   * @generated
   */
  EAttribute getEquExpression_EquOp();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.UnExpression <em>Un Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Un Expression</em>'.
   * @see org.xtext.example.cNL.UnExpression
   * @generated
   */
  EClass getUnExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.UnExpression#getUnOp <em>Un Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Un Op</em>'.
   * @see org.xtext.example.cNL.UnExpression#getUnOp()
   * @see #getUnExpression()
   * @generated
   */
  EAttribute getUnExpression_UnOp();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.TauExpression <em>Tau Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tau Expression</em>'.
   * @see org.xtext.example.cNL.TauExpression
   * @generated
   */
  EClass getTauExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.TauExpression#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Time</em>'.
   * @see org.xtext.example.cNL.TauExpression#getTime()
   * @see #getTauExpression()
   * @generated
   */
  EReference getTauExpression_Time();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.TimeLiteral <em>Time Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Time Literal</em>'.
   * @see org.xtext.example.cNL.TimeLiteral
   * @generated
   */
  EClass getTimeLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.TimeLiteral#getInterval <em>Interval</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Interval</em>'.
   * @see org.xtext.example.cNL.TimeLiteral#getInterval()
   * @see #getTimeLiteral()
   * @generated
   */
  EAttribute getTimeLiteral_Interval();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.PrimaryExpression <em>Primary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Expression</em>'.
   * @see org.xtext.example.cNL.PrimaryExpression
   * @generated
   */
  EClass getPrimaryExpression();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.PrimaryExpression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see org.xtext.example.cNL.PrimaryExpression#getName()
   * @see #getPrimaryExpression()
   * @generated
   */
  EReference getPrimaryExpression_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.PrimaryExpression#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Constant</em>'.
   * @see org.xtext.example.cNL.PrimaryExpression#getConstant()
   * @see #getPrimaryExpression()
   * @generated
   */
  EAttribute getPrimaryExpression_Constant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.PrimaryExpression#getTau <em>Tau</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tau</em>'.
   * @see org.xtext.example.cNL.PrimaryExpression#getTau()
   * @see #getPrimaryExpression()
   * @generated
   */
  EReference getPrimaryExpression_Tau();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.PrimaryExpression#getNestExpr <em>Nest Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nest Expr</em>'.
   * @see org.xtext.example.cNL.PrimaryExpression#getNestExpr()
   * @see #getPrimaryExpression()
   * @generated
   */
  EReference getPrimaryExpression_NestExpr();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.ReqDeclaration <em>Req Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Req Declaration</em>'.
   * @see org.xtext.example.cNL.ReqDeclaration
   * @generated
   */
  EClass getReqDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.cNL.ReqDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.cNL.ReqDeclaration#getName()
   * @see #getReqDeclaration()
   * @generated
   */
  EAttribute getReqDeclaration_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.ReqDeclaration#getRequirement <em>Requirement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Requirement</em>'.
   * @see org.xtext.example.cNL.ReqDeclaration#getRequirement()
   * @see #getReqDeclaration()
   * @generated
   */
  EReference getReqDeclaration_Requirement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Requirement <em>Requirement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Requirement</em>'.
   * @see org.xtext.example.cNL.Requirement
   * @generated
   */
  EClass getRequirement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Requirement#getTrigger <em>Trigger</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Trigger</em>'.
   * @see org.xtext.example.cNL.Requirement#getTrigger()
   * @see #getRequirement()
   * @generated
   */
  EReference getRequirement_Trigger();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Requirement#getInvariant <em>Invariant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Invariant</em>'.
   * @see org.xtext.example.cNL.Requirement#getInvariant()
   * @see #getRequirement()
   * @generated
   */
  EReference getRequirement_Invariant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Trig <em>Trig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Trig</em>'.
   * @see org.xtext.example.cNL.Trig
   * @generated
   */
  EClass getTrig();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Trig#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Name</em>'.
   * @see org.xtext.example.cNL.Trig#getName()
   * @see #getTrig()
   * @generated
   */
  EReference getTrig_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Trig#getInvariant <em>Invariant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Invariant</em>'.
   * @see org.xtext.example.cNL.Trig#getInvariant()
   * @see #getTrig()
   * @generated
   */
  EReference getTrig_Invariant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Trig#getRelease_reaction <em>Release reaction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Release reaction</em>'.
   * @see org.xtext.example.cNL.Trig#getRelease_reaction()
   * @see #getTrig()
   * @generated
   */
  EReference getTrig_Release_reaction();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Trig#getDelay_final <em>Delay final</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delay final</em>'.
   * @see org.xtext.example.cNL.Trig#getDelay_final()
   * @see #getTrig()
   * @generated
   */
  EReference getTrig_Delay_final();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Inv <em>Inv</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inv</em>'.
   * @see org.xtext.example.cNL.Inv
   * @generated
   */
  EClass getInv();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Inv#getInv <em>Inv</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Inv</em>'.
   * @see org.xtext.example.cNL.Inv#getInv()
   * @see #getInv()
   * @generated
   */
  EReference getInv_Inv();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Inv#getDelay_final <em>Delay final</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delay final</em>'.
   * @see org.xtext.example.cNL.Inv#getDelay_final()
   * @see #getInv()
   * @generated
   */
  EReference getInv_Delay_final();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Inv#getRelease_reaction <em>Release reaction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Release reaction</em>'.
   * @see org.xtext.example.cNL.Inv#getRelease_reaction()
   * @see #getInv()
   * @generated
   */
  EReference getInv_Release_reaction();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Inv_always <em>Inv always</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inv always</em>'.
   * @see org.xtext.example.cNL.Inv_always
   * @generated
   */
  EClass getInv_always();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Inv_always#getInv <em>Inv</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Inv</em>'.
   * @see org.xtext.example.cNL.Inv_always#getInv()
   * @see #getInv_always()
   * @generated
   */
  EReference getInv_always_Inv();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Inv_always#getRelease_reaction <em>Release reaction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Release reaction</em>'.
   * @see org.xtext.example.cNL.Inv_always#getRelease_reaction()
   * @see #getInv_always()
   * @generated
   */
  EReference getInv_always_Release_reaction();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.RelRea <em>Rel Rea</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rel Rea</em>'.
   * @see org.xtext.example.cNL.RelRea
   * @generated
   */
  EClass getRelRea();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.RelRea#getReaction <em>Reaction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Reaction</em>'.
   * @see org.xtext.example.cNL.RelRea#getReaction()
   * @see #getRelRea()
   * @generated
   */
  EReference getRelRea_Reaction();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.RelRea#getDelay_final <em>Delay final</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delay final</em>'.
   * @see org.xtext.example.cNL.RelRea#getDelay_final()
   * @see #getRelRea()
   * @generated
   */
  EReference getRelRea_Delay_final();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Reaction <em>Reaction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Reaction</em>'.
   * @see org.xtext.example.cNL.Reaction
   * @generated
   */
  EClass getReaction();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.DelFin <em>Del Fin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Del Fin</em>'.
   * @see org.xtext.example.cNL.DelFin
   * @generated
   */
  EClass getDelFin();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Delay <em>Delay</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delay</em>'.
   * @see org.xtext.example.cNL.Delay
   * @generated
   */
  EClass getDelay();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Rel <em>Rel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rel</em>'.
   * @see org.xtext.example.cNL.Rel
   * @generated
   */
  EClass getRel();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Rel#getRel <em>Rel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Rel</em>'.
   * @see org.xtext.example.cNL.Rel#getRel()
   * @see #getRel()
   * @generated
   */
  EReference getRel_Rel();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Rea <em>Rea</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rea</em>'.
   * @see org.xtext.example.cNL.Rea
   * @generated
   */
  EClass getRea();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Rea#getRea <em>Rea</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Rea</em>'.
   * @see org.xtext.example.cNL.Rea#getRea()
   * @see #getRea()
   * @generated
   */
  EReference getRea_Rea();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Sentence <em>Sentence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sentence</em>'.
   * @see org.xtext.example.cNL.Sentence
   * @generated
   */
  EClass getSentence();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.cNL.Sentence#getDelay <em>Delay</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Delay</em>'.
   * @see org.xtext.example.cNL.Sentence#getDelay()
   * @see #getSentence()
   * @generated
   */
  EReference getSentence_Delay();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Sentence#getFin <em>Fin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Fin</em>'.
   * @see org.xtext.example.cNL.Sentence#getFin()
   * @see #getSentence()
   * @generated
   */
  EReference getSentence_Fin();

  /**
   * Returns the meta object for class '{@link org.xtext.example.cNL.Del <em>Del</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Del</em>'.
   * @see org.xtext.example.cNL.Del
   * @generated
   */
  EClass getDel();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.cNL.Del#getDel <em>Del</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Del</em>'.
   * @see org.xtext.example.cNL.Del#getDel()
   * @see #getDel()
   * @generated
   */
  EReference getDel_Del();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.cNL.EquOperator <em>Equ Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Equ Operator</em>'.
   * @see org.xtext.example.cNL.EquOperator
   * @generated
   */
  EEnum getEquOperator();

  /**
   * Returns the meta object for enum '{@link org.xtext.example.cNL.CompOperator <em>Comp Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Comp Operator</em>'.
   * @see org.xtext.example.cNL.CompOperator
   * @generated
   */
  EEnum getCompOperator();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  CNLFactory getCNLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.ModelImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Decl Var Input</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__DECL_VAR_INPUT = eINSTANCE.getModel_DeclVarInput();

    /**
     * The meta object literal for the '<em><b>Decl Var Output</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__DECL_VAR_OUTPUT = eINSTANCE.getModel_DeclVarOutput();

    /**
     * The meta object literal for the '<em><b>Sent Declaration</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__SENT_DECLARATION = eINSTANCE.getModel_SentDeclaration();

    /**
     * The meta object literal for the '<em><b>Req Declaration</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__REQ_DECLARATION = eINSTANCE.getModel_ReqDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.DeclVarInputImpl <em>Decl Var Input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.DeclVarInputImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDeclVarInput()
     * @generated
     */
    EClass DECL_VAR_INPUT = eINSTANCE.getDeclVarInput();

    /**
     * The meta object literal for the '<em><b>Var Decls</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECL_VAR_INPUT__VAR_DECLS = eINSTANCE.getDeclVarInput_VarDecls();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.DeclVarOutputImpl <em>Decl Var Output</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.DeclVarOutputImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDeclVarOutput()
     * @generated
     */
    EClass DECL_VAR_OUTPUT = eINSTANCE.getDeclVarOutput();

    /**
     * The meta object literal for the '<em><b>Var Decls</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECL_VAR_OUTPUT__VAR_DECLS = eINSTANCE.getDeclVarOutput_VarDecls();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.VarDeclarationImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__NAME = eINSTANCE.getVarDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARATION__TYPE = eINSTANCE.getVarDeclaration_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.SentDeclarationImpl <em>Sent Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.SentDeclarationImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getSentDeclaration()
     * @generated
     */
    EClass SENT_DECLARATION = eINSTANCE.getSentDeclaration();

    /**
     * The meta object literal for the '<em><b>Declaration Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SENT_DECLARATION__DECLARATION_NAME = eINSTANCE.getSentDeclaration_DeclarationName();

    /**
     * The meta object literal for the '<em><b>Sentence Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SENT_DECLARATION__SENTENCE_DECLARATION = eINSTANCE.getSentDeclaration_SentenceDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.SentenceDeclarationImpl <em>Sentence Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.SentenceDeclarationImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getSentenceDeclaration()
     * @generated
     */
    EClass SENTENCE_DECLARATION = eINSTANCE.getSentenceDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SENTENCE_DECLARATION__NAME = eINSTANCE.getSentenceDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Logic Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SENTENCE_DECLARATION__LOGIC_EXPRESSION = eINSTANCE.getSentenceDeclaration_LogicExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.ExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LEFT = eINSTANCE.getExpression_Left();

    /**
     * The meta object literal for the '<em><b>Or Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__OR_OP = eINSTANCE.getExpression_OrOp();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__RIGHT = eINSTANCE.getExpression_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.XorExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getXorExpression()
     * @generated
     */
    EClass XOR_EXPRESSION = eINSTANCE.getXorExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.AndExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '<em><b>And Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND_EXPRESSION__AND_OP = eINSTANCE.getAndExpression_AndOp();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.CompExpressionImpl <em>Comp Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.CompExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getCompExpression()
     * @generated
     */
    EClass COMP_EXPRESSION = eINSTANCE.getCompExpression();

    /**
     * The meta object literal for the '<em><b>Comp Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMP_EXPRESSION__COMP_OP = eINSTANCE.getCompExpression_CompOp();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.EquExpressionImpl <em>Equ Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.EquExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getEquExpression()
     * @generated
     */
    EClass EQU_EXPRESSION = eINSTANCE.getEquExpression();

    /**
     * The meta object literal for the '<em><b>Equ Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQU_EXPRESSION__EQU_OP = eINSTANCE.getEquExpression_EquOp();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.UnExpressionImpl <em>Un Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.UnExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getUnExpression()
     * @generated
     */
    EClass UN_EXPRESSION = eINSTANCE.getUnExpression();

    /**
     * The meta object literal for the '<em><b>Un Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UN_EXPRESSION__UN_OP = eINSTANCE.getUnExpression_UnOp();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.TauExpressionImpl <em>Tau Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.TauExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getTauExpression()
     * @generated
     */
    EClass TAU_EXPRESSION = eINSTANCE.getTauExpression();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TAU_EXPRESSION__TIME = eINSTANCE.getTauExpression_Time();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.TimeLiteralImpl <em>Time Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.TimeLiteralImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getTimeLiteral()
     * @generated
     */
    EClass TIME_LITERAL = eINSTANCE.getTimeLiteral();

    /**
     * The meta object literal for the '<em><b>Interval</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME_LITERAL__INTERVAL = eINSTANCE.getTimeLiteral_Interval();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.PrimaryExpressionImpl <em>Primary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.PrimaryExpressionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getPrimaryExpression()
     * @generated
     */
    EClass PRIMARY_EXPRESSION = eINSTANCE.getPrimaryExpression();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_EXPRESSION__NAME = eINSTANCE.getPrimaryExpression_Name();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRIMARY_EXPRESSION__CONSTANT = eINSTANCE.getPrimaryExpression_Constant();

    /**
     * The meta object literal for the '<em><b>Tau</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_EXPRESSION__TAU = eINSTANCE.getPrimaryExpression_Tau();

    /**
     * The meta object literal for the '<em><b>Nest Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_EXPRESSION__NEST_EXPR = eINSTANCE.getPrimaryExpression_NestExpr();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.ReqDeclarationImpl <em>Req Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.ReqDeclarationImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getReqDeclaration()
     * @generated
     */
    EClass REQ_DECLARATION = eINSTANCE.getReqDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REQ_DECLARATION__NAME = eINSTANCE.getReqDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Requirement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REQ_DECLARATION__REQUIREMENT = eINSTANCE.getReqDeclaration_Requirement();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.RequirementImpl <em>Requirement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.RequirementImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRequirement()
     * @generated
     */
    EClass REQUIREMENT = eINSTANCE.getRequirement();

    /**
     * The meta object literal for the '<em><b>Trigger</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REQUIREMENT__TRIGGER = eINSTANCE.getRequirement_Trigger();

    /**
     * The meta object literal for the '<em><b>Invariant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REQUIREMENT__INVARIANT = eINSTANCE.getRequirement_Invariant();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.TrigImpl <em>Trig</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.TrigImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getTrig()
     * @generated
     */
    EClass TRIG = eINSTANCE.getTrig();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRIG__NAME = eINSTANCE.getTrig_Name();

    /**
     * The meta object literal for the '<em><b>Invariant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRIG__INVARIANT = eINSTANCE.getTrig_Invariant();

    /**
     * The meta object literal for the '<em><b>Release reaction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRIG__RELEASE_REACTION = eINSTANCE.getTrig_Release_reaction();

    /**
     * The meta object literal for the '<em><b>Delay final</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRIG__DELAY_FINAL = eINSTANCE.getTrig_Delay_final();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.InvImpl <em>Inv</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.InvImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getInv()
     * @generated
     */
    EClass INV = eINSTANCE.getInv();

    /**
     * The meta object literal for the '<em><b>Inv</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INV__INV = eINSTANCE.getInv_Inv();

    /**
     * The meta object literal for the '<em><b>Delay final</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INV__DELAY_FINAL = eINSTANCE.getInv_Delay_final();

    /**
     * The meta object literal for the '<em><b>Release reaction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INV__RELEASE_REACTION = eINSTANCE.getInv_Release_reaction();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.Inv_alwaysImpl <em>Inv always</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.Inv_alwaysImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getInv_always()
     * @generated
     */
    EClass INV_ALWAYS = eINSTANCE.getInv_always();

    /**
     * The meta object literal for the '<em><b>Inv</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INV_ALWAYS__INV = eINSTANCE.getInv_always_Inv();

    /**
     * The meta object literal for the '<em><b>Release reaction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INV_ALWAYS__RELEASE_REACTION = eINSTANCE.getInv_always_Release_reaction();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.RelReaImpl <em>Rel Rea</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.RelReaImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRelRea()
     * @generated
     */
    EClass REL_REA = eINSTANCE.getRelRea();

    /**
     * The meta object literal for the '<em><b>Reaction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REL_REA__REACTION = eINSTANCE.getRelRea_Reaction();

    /**
     * The meta object literal for the '<em><b>Delay final</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REL_REA__DELAY_FINAL = eINSTANCE.getRelRea_Delay_final();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.ReactionImpl <em>Reaction</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.ReactionImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getReaction()
     * @generated
     */
    EClass REACTION = eINSTANCE.getReaction();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.DelFinImpl <em>Del Fin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.DelFinImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDelFin()
     * @generated
     */
    EClass DEL_FIN = eINSTANCE.getDelFin();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.DelayImpl <em>Delay</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.DelayImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDelay()
     * @generated
     */
    EClass DELAY = eINSTANCE.getDelay();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.RelImpl <em>Rel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.RelImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRel()
     * @generated
     */
    EClass REL = eINSTANCE.getRel();

    /**
     * The meta object literal for the '<em><b>Rel</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REL__REL = eINSTANCE.getRel_Rel();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.ReaImpl <em>Rea</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.ReaImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getRea()
     * @generated
     */
    EClass REA = eINSTANCE.getRea();

    /**
     * The meta object literal for the '<em><b>Rea</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REA__REA = eINSTANCE.getRea_Rea();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.SentenceImpl <em>Sentence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.SentenceImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getSentence()
     * @generated
     */
    EClass SENTENCE = eINSTANCE.getSentence();

    /**
     * The meta object literal for the '<em><b>Delay</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SENTENCE__DELAY = eINSTANCE.getSentence_Delay();

    /**
     * The meta object literal for the '<em><b>Fin</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SENTENCE__FIN = eINSTANCE.getSentence_Fin();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.impl.DelImpl <em>Del</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.impl.DelImpl
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getDel()
     * @generated
     */
    EClass DEL = eINSTANCE.getDel();

    /**
     * The meta object literal for the '<em><b>Del</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEL__DEL = eINSTANCE.getDel_Del();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.EquOperator <em>Equ Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.EquOperator
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getEquOperator()
     * @generated
     */
    EEnum EQU_OPERATOR = eINSTANCE.getEquOperator();

    /**
     * The meta object literal for the '{@link org.xtext.example.cNL.CompOperator <em>Comp Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.cNL.CompOperator
     * @see org.xtext.example.cNL.impl.CNLPackageImpl#getCompOperator()
     * @generated
     */
    EEnum COMP_OPERATOR = eINSTANCE.getCompOperator();

  }

} //CNLPackage
