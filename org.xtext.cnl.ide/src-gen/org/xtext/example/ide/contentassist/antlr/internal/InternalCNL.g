/*
 * generated by Xtext 2.32.0
 */
grammar InternalCNL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.CNLGrammarAccess;

}
@parser::members {
	private CNLGrammarAccess grammarAccess;

	public void setGrammarAccess(CNLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)*
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableType
entryRuleVariableType
:
{ before(grammarAccess.getVariableTypeRule()); }
	 ruleVariableType
{ after(grammarAccess.getVariableTypeRule()); } 
	 EOF 
;

// Rule VariableType
ruleVariableType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableTypeAccess().getAlternatives()); }
		(rule__VariableType__Alternatives)
		{ after(grammarAccess.getVariableTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclVarInput
entryRuleDeclVarInput
:
{ before(grammarAccess.getDeclVarInputRule()); }
	 ruleDeclVarInput
{ after(grammarAccess.getDeclVarInputRule()); } 
	 EOF 
;

// Rule DeclVarInput
ruleDeclVarInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclVarInputAccess().getGroup()); }
		(rule__DeclVarInput__Group__0)
		{ after(grammarAccess.getDeclVarInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclVarOutput
entryRuleDeclVarOutput
:
{ before(grammarAccess.getDeclVarOutputRule()); }
	 ruleDeclVarOutput
{ after(grammarAccess.getDeclVarOutputRule()); } 
	 EOF 
;

// Rule DeclVarOutput
ruleDeclVarOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclVarOutputAccess().getGroup()); }
		(rule__DeclVarOutput__Group__0)
		{ after(grammarAccess.getDeclVarOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration
:
{ before(grammarAccess.getVarDeclarationRule()); }
	 ruleVarDeclaration
{ after(grammarAccess.getVarDeclarationRule()); } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getGroup()); }
		(rule__VarDeclaration__Group__0)
		{ after(grammarAccess.getVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentDeclaration
entryRuleSentDeclaration
:
{ before(grammarAccess.getSentDeclarationRule()); }
	 ruleSentDeclaration
{ after(grammarAccess.getSentDeclarationRule()); } 
	 EOF 
;

// Rule SentDeclaration
ruleSentDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentDeclarationAccess().getGroup()); }
		(rule__SentDeclaration__Group__0)
		{ after(grammarAccess.getSentDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentenceDeclaration
entryRuleSentenceDeclaration
:
{ before(grammarAccess.getSentenceDeclarationRule()); }
	 ruleSentenceDeclaration
{ after(grammarAccess.getSentenceDeclarationRule()); } 
	 EOF 
;

// Rule SentenceDeclaration
ruleSentenceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceDeclarationAccess().getGroup()); }
		(rule__SentenceDeclaration__Group__0)
		{ after(grammarAccess.getSentenceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorExpression
entryRuleXorExpression
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
		(rule__XorExpression__Group__0)
		{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXOR_OPERATOR
entryRuleXOR_OPERATOR
:
{ before(grammarAccess.getXOR_OPERATORRule()); }
	 ruleXOR_OPERATOR
{ after(grammarAccess.getXOR_OPERATORRule()); } 
	 EOF 
;

// Rule XOR_OPERATOR
ruleXOR_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXOR_OPERATORAccess().getXORKeyword()); }
		'XOR'
		{ after(grammarAccess.getXOR_OPERATORAccess().getXORKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAND_OPERATOR
entryRuleAND_OPERATOR
:
{ before(grammarAccess.getAND_OPERATORRule()); }
	 ruleAND_OPERATOR
{ after(grammarAccess.getAND_OPERATORRule()); } 
	 EOF 
;

// Rule AND_OPERATOR
ruleAND_OPERATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAND_OPERATORAccess().getAlternatives()); }
		(rule__AND_OPERATOR__Alternatives)
		{ after(grammarAccess.getAND_OPERATORAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompExpression
entryRuleCompExpression
:
{ before(grammarAccess.getCompExpressionRule()); }
	 ruleCompExpression
{ after(grammarAccess.getCompExpressionRule()); } 
	 EOF 
;

// Rule CompExpression
ruleCompExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompExpressionAccess().getGroup()); }
		(rule__CompExpression__Group__0)
		{ after(grammarAccess.getCompExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquExpression
entryRuleEquExpression
:
{ before(grammarAccess.getEquExpressionRule()); }
	 ruleEquExpression
{ after(grammarAccess.getEquExpressionRule()); } 
	 EOF 
;

// Rule EquExpression
ruleEquExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquExpressionAccess().getGroup()); }
		(rule__EquExpression__Group__0)
		{ after(grammarAccess.getEquExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnOperator
entryRuleUnOperator
:
{ before(grammarAccess.getUnOperatorRule()); }
	 ruleUnOperator
{ after(grammarAccess.getUnOperatorRule()); } 
	 EOF 
;

// Rule UnOperator
ruleUnOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnOperatorAccess().getAlternatives()); }
		(rule__UnOperator__Alternatives)
		{ after(grammarAccess.getUnOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotOperator
entryRuleNotOperator
:
{ before(grammarAccess.getNotOperatorRule()); }
	 ruleNotOperator
{ after(grammarAccess.getNotOperatorRule()); } 
	 EOF 
;

// Rule NotOperator
ruleNotOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotOperatorAccess().getAlternatives()); }
		(rule__NotOperator__Alternatives)
		{ after(grammarAccess.getNotOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnExpression
entryRuleUnExpression
:
{ before(grammarAccess.getUnExpressionRule()); }
	 ruleUnExpression
{ after(grammarAccess.getUnExpressionRule()); } 
	 EOF 
;

// Rule UnExpression
ruleUnExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnExpressionAccess().getAlternatives()); }
		(rule__UnExpression__Alternatives)
		{ after(grammarAccess.getUnExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTauExpression
entryRuleTauExpression
:
{ before(grammarAccess.getTauExpressionRule()); }
	 ruleTauExpression
{ after(grammarAccess.getTauExpressionRule()); } 
	 EOF 
;

// Rule TauExpression
ruleTauExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTauExpressionAccess().getGroup()); }
		(rule__TauExpression__Group__0)
		{ after(grammarAccess.getTauExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral
:
{ before(grammarAccess.getTimeLiteralRule()); }
	 ruleTimeLiteral
{ after(grammarAccess.getTimeLiteralRule()); } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeLiteralAccess().getGroup()); }
		(rule__TimeLiteral__Group__0)
		{ after(grammarAccess.getTimeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIME_PREF_LITERAL
entryRuleTIME_PREF_LITERAL
:
{ before(grammarAccess.getTIME_PREF_LITERALRule()); }
	 ruleTIME_PREF_LITERAL
{ after(grammarAccess.getTIME_PREF_LITERALRule()); } 
	 EOF 
;

// Rule TIME_PREF_LITERAL
ruleTIME_PREF_LITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIME_PREF_LITERALAccess().getTKeyword()); }
		'#T'
		{ after(grammarAccess.getTIME_PREF_LITERALAccess().getTKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReqDeclaration
entryRuleReqDeclaration
:
{ before(grammarAccess.getReqDeclarationRule()); }
	 ruleReqDeclaration
{ after(grammarAccess.getReqDeclarationRule()); } 
	 EOF 
;

// Rule ReqDeclaration
ruleReqDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReqDeclarationAccess().getGroup()); }
		(rule__ReqDeclaration__Group__0)
		{ after(grammarAccess.getReqDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequirement
entryRuleRequirement
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequirementAccess().getGroup()); }
		(rule__Requirement__Group__0)
		{ after(grammarAccess.getRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrig
entryRuleTrig
:
{ before(grammarAccess.getTrigRule()); }
	 ruleTrig
{ after(grammarAccess.getTrigRule()); } 
	 EOF 
;

// Rule Trig
ruleTrig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrigAccess().getGroup()); }
		(rule__Trig__Group__0)
		{ after(grammarAccess.getTrigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInv
entryRuleInv
:
{ before(grammarAccess.getInvRule()); }
	 ruleInv
{ after(grammarAccess.getInvRule()); } 
	 EOF 
;

// Rule Inv
ruleInv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvAccess().getGroup()); }
		(rule__Inv__Group__0)
		{ after(grammarAccess.getInvAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInv_always
entryRuleInv_always
:
{ before(grammarAccess.getInv_alwaysRule()); }
	 ruleInv_always
{ after(grammarAccess.getInv_alwaysRule()); } 
	 EOF 
;

// Rule Inv_always
ruleInv_always 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInv_alwaysAccess().getGroup()); }
		(rule__Inv_always__Group__0)
		{ after(grammarAccess.getInv_alwaysAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelRea
entryRuleRelRea
:
{ before(grammarAccess.getRelReaRule()); }
	 ruleRelRea
{ after(grammarAccess.getRelReaRule()); } 
	 EOF 
;

// Rule RelRea
ruleRelRea 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelReaAccess().getAlternatives()); }
		(rule__RelRea__Alternatives)
		{ after(grammarAccess.getRelReaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReaction
entryRuleReaction
:
{ before(grammarAccess.getReactionRule()); }
	 ruleReaction
{ after(grammarAccess.getReactionRule()); } 
	 EOF 
;

// Rule Reaction
ruleReaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionAccess().getGroup()); }
		(rule__Reaction__Group__0)
		{ after(grammarAccess.getReactionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelFin
entryRuleDelFin
:
{ before(grammarAccess.getDelFinRule()); }
	 ruleDelFin
{ after(grammarAccess.getDelFinRule()); } 
	 EOF 
;

// Rule DelFin
ruleDelFin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDelFinAccess().getGroup()); }
		(rule__DelFin__Group__0)
		{ after(grammarAccess.getDelFinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelay
entryRuleDelay
:
{ before(grammarAccess.getDelayRule()); }
	 ruleDelay
{ after(grammarAccess.getDelayRule()); } 
	 EOF 
;

// Rule Delay
ruleDelay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDelayAccess().getGroup()); }
		(rule__Delay__Group__0)
		{ after(grammarAccess.getDelayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentence
entryRuleSentence
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getSentenceAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOMMA
entryRuleCOMMA
:
{ before(grammarAccess.getCOMMARule()); }
	 ruleCOMMA
{ after(grammarAccess.getCOMMARule()); } 
	 EOF 
;

// Rule COMMA
ruleCOMMA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOMMAAccess().getCommaKeyword()); }
		','
		{ after(grammarAccess.getCOMMAAccess().getCommaKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EquOperator
ruleEquOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquOperatorAccess().getAlternatives()); }
		(rule__EquOperator__Alternatives)
		{ after(grammarAccess.getEquOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompOperator
ruleCompOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOperatorAccess().getAlternatives()); }
		(rule__CompOperator__Alternatives)
		{ after(grammarAccess.getCompOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclVarInputAssignment_0()); }
		(rule__Model__DeclVarInputAssignment_0)
		{ after(grammarAccess.getModelAccess().getDeclVarInputAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDeclVarOutputAssignment_1()); }
		(rule__Model__DeclVarOutputAssignment_1)
		{ after(grammarAccess.getModelAccess().getDeclVarOutputAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getSentDeclarationAssignment_2()); }
		(rule__Model__SentDeclarationAssignment_2)
		{ after(grammarAccess.getModelAccess().getSentDeclarationAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getReqDeclarationAssignment_3()); }
		(rule__Model__ReqDeclarationAssignment_3)
		{ after(grammarAccess.getModelAccess().getReqDeclarationAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableTypeAccess().getBOOLKeyword_0()); }
		'BOOL'
		{ after(grammarAccess.getVariableTypeAccess().getBOOLKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getINTKeyword_1()); }
		'INT'
		{ after(grammarAccess.getVariableTypeAccess().getINTKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AND_OPERATOR__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAND_OPERATORAccess().getANDKeyword_0()); }
		'AND'
		{ after(grammarAccess.getAND_OPERATORAccess().getANDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAND_OPERATORAccess().getAmpersandAmpersandKeyword_1()); }
		'&&'
		{ after(grammarAccess.getAND_OPERATORAccess().getAmpersandAmpersandKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnOperatorAccess().getNotOperatorParserRuleCall_0()); }
		ruleNotOperator
		{ after(grammarAccess.getUnOperatorAccess().getNotOperatorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnOperatorAccess().getFEKeyword_1()); }
		'FE'
		{ after(grammarAccess.getUnOperatorAccess().getFEKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnOperatorAccess().getREKeyword_2()); }
		'RE'
		{ after(grammarAccess.getUnOperatorAccess().getREKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnOperatorAccess().getHIGHKeyword_3()); }
		'HIGH'
		{ after(grammarAccess.getUnOperatorAccess().getHIGHKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnOperatorAccess().getLOWKeyword_4()); }
		'LOW'
		{ after(grammarAccess.getUnOperatorAccess().getLOWKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotOperatorAccess().getNOTKeyword_0()); }
		'NOT'
		{ after(grammarAccess.getNotOperatorAccess().getNOTKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNotOperatorAccess().getExclamationMarkKeyword_1()); }
		'!'
		{ after(grammarAccess.getNotOperatorAccess().getExclamationMarkKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnExpressionAccess().getGroup_1()); }
		(rule__UnExpression__Group_1__0)
		{ after(grammarAccess.getUnExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0()); }
		(rule__PrimaryExpression__NameAssignment_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstantAssignment_1()); }
		(rule__PrimaryExpression__ConstantAssignment_1)
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstantAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getTauAssignment_2()); }
		(rule__PrimaryExpression__TauAssignment_2)
		{ after(grammarAccess.getPrimaryExpressionAccess().getTauAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
		(rule__PrimaryExpression__Group_3__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getINTEGERTerminalRuleCall_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getConstantAccess().getINTEGERTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getBOOLEAN_LITERALTerminalRuleCall_1()); }
		RULE_BOOLEAN_LITERAL
		{ after(grammarAccess.getConstantAccess().getBOOLEAN_LITERALTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getTriggerAssignment_0_0()); }
		(rule__Requirement__TriggerAssignment_0_0)
		{ after(grammarAccess.getRequirementAccess().getTriggerAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequirementAccess().getInvariantAssignment_0_1()); }
		(rule__Requirement__InvariantAssignment_0_1)
		{ after(grammarAccess.getRequirementAccess().getInvariantAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrigAccess().getGroup_0_0()); }
		(rule__Trig__Group_0_0__0)
		{ after(grammarAccess.getTrigAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTrigAccess().getAlwaysKeyword_0_1()); }
		'Always'
		{ after(grammarAccess.getTrigAccess().getAlwaysKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrigAccess().getInvariantAssignment_1_0()); }
		(rule__Trig__InvariantAssignment_1_0)
		{ after(grammarAccess.getTrigAccess().getInvariantAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTrigAccess().getRelease_reactionAssignment_1_1()); }
		(rule__Trig__Release_reactionAssignment_1_1)
		{ after(grammarAccess.getTrigAccess().getRelease_reactionAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTrigAccess().getDelay_finalAssignment_1_2()); }
		(rule__Trig__Delay_finalAssignment_1_2)
		{ after(grammarAccess.getTrigAccess().getDelay_finalAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvAccess().getGroup_2_0()); }
		(rule__Inv__Group_2_0__0)
		{ after(grammarAccess.getInvAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getInvAccess().getGroup_2_1()); }
		(rule__Inv__Group_2_1__0)
		{ after(grammarAccess.getInvAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getGroup_0()); }
		(rule__RelRea__Group_0__0)
		{ after(grammarAccess.getRelReaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelReaAccess().getGroup_1()); }
		(rule__RelRea__Group_1__0)
		{ after(grammarAccess.getRelReaAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelReaAccess().getGroup_2()); }
		(rule__RelRea__Group_2__0)
		{ after(grammarAccess.getRelReaAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelReaAccess().getGroup_3()); }
		(rule__RelRea__Group_3__0)
		{ after(grammarAccess.getRelReaAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelFinAccess().getGroup_1_0()); }
		(rule__DelFin__Group_1_0__0)
		{ after(grammarAccess.getDelFinAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDelFinAccess().getFinAssignment_1_1()); }
		(rule__DelFin__FinAssignment_1_1)
		{ after(grammarAccess.getDelFinAccess().getFinAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelFinAccess().getGroup_1_0_1_0()); }
		(rule__DelFin__Group_1_0_1_0__0)
		{ after(grammarAccess.getDelFinAccess().getGroup_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDelFinAccess().getGroup_1_0_1_1()); }
		(rule__DelFin__Group_1_0_1_1__0)
		{ after(grammarAccess.getDelFinAccess().getGroup_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getEquOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
		('<>')
		{ after(grammarAccess.getEquOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOperatorAccess().getLESS_EQUEnumLiteralDeclaration_0()); }
		('<=')
		{ after(grammarAccess.getCompOperatorAccess().getLESS_EQUEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getGREATER_EQUEnumLiteralDeclaration_1()); }
		('>=')
		{ after(grammarAccess.getCompOperatorAccess().getGREATER_EQUEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getLESSEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getCompOperatorAccess().getLESSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getGREATEREnumLiteralDeclaration_3()); }
		('>')
		{ after(grammarAccess.getCompOperatorAccess().getGREATEREnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarInput__Group__0__Impl
	rule__DeclVarInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarInputAccess().getDeclVarInputAction_0()); }
	()
	{ after(grammarAccess.getDeclVarInputAccess().getDeclVarInputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarInput__Group__1__Impl
	rule__DeclVarInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarInputAccess().getVAR_INPUTKeyword_1()); }
	'VAR_INPUT'
	{ after(grammarAccess.getDeclVarInputAccess().getVAR_INPUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarInput__Group__2__Impl
	rule__DeclVarInput__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDeclVarInputAccess().getGroup_2()); }
		(rule__DeclVarInput__Group_2__0)
		{ after(grammarAccess.getDeclVarInputAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getDeclVarInputAccess().getGroup_2()); }
		(rule__DeclVarInput__Group_2__0)*
		{ after(grammarAccess.getDeclVarInputAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarInput__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarInputAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getDeclVarInputAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVarInput__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarInput__Group_2__0__Impl
	rule__DeclVarInput__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarInputAccess().getVarDeclsAssignment_2_0()); }
	(rule__DeclVarInput__VarDeclsAssignment_2_0)
	{ after(grammarAccess.getDeclVarInputAccess().getVarDeclsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarInput__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarInputAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getDeclVarInputAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVarOutput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarOutput__Group__0__Impl
	rule__DeclVarOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarOutputAccess().getDeclVarOutputAction_0()); }
	()
	{ after(grammarAccess.getDeclVarOutputAccess().getDeclVarOutputAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarOutput__Group__1__Impl
	rule__DeclVarOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarOutputAccess().getVAR_OUTPUTKeyword_1()); }
	'VAR_OUTPUT'
	{ after(grammarAccess.getDeclVarOutputAccess().getVAR_OUTPUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarOutput__Group__2__Impl
	rule__DeclVarOutput__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDeclVarOutputAccess().getGroup_2()); }
		(rule__DeclVarOutput__Group_2__0)
		{ after(grammarAccess.getDeclVarOutputAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getDeclVarOutputAccess().getGroup_2()); }
		(rule__DeclVarOutput__Group_2__0)*
		{ after(grammarAccess.getDeclVarOutputAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarOutput__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarOutputAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getDeclVarOutputAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclVarOutput__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarOutput__Group_2__0__Impl
	rule__DeclVarOutput__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarOutputAccess().getVarDeclsAssignment_2_0()); }
	(rule__DeclVarOutput__VarDeclsAssignment_2_0)
	{ after(grammarAccess.getDeclVarOutputAccess().getVarDeclsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclVarOutput__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclVarOutputAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getDeclVarOutputAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__0__Impl
	rule__VarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); }
	(rule__VarDeclaration__NameAssignment_0)
	{ after(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__1__Impl
	rule__VarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVarDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2()); }
	(rule__VarDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SentDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentDeclaration__Group__0__Impl
	rule__SentDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentDeclarationAccess().getSentDeclarationAction_0()); }
	()
	{ after(grammarAccess.getSentDeclarationAccess().getSentDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentDeclaration__Group__1__Impl
	rule__SentDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentDeclarationAccess().getSENTENCEKeyword_1()); }
	'SENTENCE'
	{ after(grammarAccess.getSentDeclarationAccess().getSENTENCEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentDeclaration__Group__2__Impl
	rule__SentDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentDeclarationAccess().getDeclarationNameAssignment_2()); }
	(rule__SentDeclaration__DeclarationNameAssignment_2)
	{ after(grammarAccess.getSentDeclarationAccess().getDeclarationNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentDeclaration__Group__3__Impl
	rule__SentDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentDeclarationAccess().getSentenceDeclarationAssignment_3()); }
	(rule__SentDeclaration__SentenceDeclarationAssignment_3)
	{ after(grammarAccess.getSentDeclarationAccess().getSentenceDeclarationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentDeclarationAccess().getEND_SENTENCEKeyword_4()); }
	'END_SENTENCE'
	{ after(grammarAccess.getSentDeclarationAccess().getEND_SENTENCEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SentenceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentenceDeclaration__Group__0__Impl
	rule__SentenceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentenceDeclarationAccess().getSentenceDeclarationAction_0()); }
	()
	{ after(grammarAccess.getSentenceDeclarationAccess().getSentenceDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentenceDeclaration__Group__1__Impl
	rule__SentenceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentenceDeclarationAccess().getNameAssignment_1()); }
	(rule__SentenceDeclaration__NameAssignment_1)
	{ after(grammarAccess.getSentenceDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentenceDeclaration__Group__2__Impl
	rule__SentenceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentenceDeclarationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getSentenceDeclarationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentenceDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentenceDeclarationAccess().getLogicExpressionAssignment_3()); }
	(rule__SentenceDeclaration__LogicExpressionAssignment_3)
	{ after(grammarAccess.getSentenceDeclarationAccess().getLogicExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getXorExpressionParserRuleCall_0()); }
	ruleXorExpression
	{ after(grammarAccess.getExpressionAccess().getXorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOrOpAssignment_1_1()); }
	(rule__Expression__OrOpAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getOrOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
	(rule__Expression__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
	(rule__XorExpression__Group_1__0)*
	{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getXorExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getXorExpressionAccess().getXorExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__1__Impl
	rule__XorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getXOR_OPERATORParserRuleCall_1_1()); }
	ruleXOR_OPERATOR
	{ after(grammarAccess.getXorExpressionAccess().getXOR_OPERATORParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
	(rule__XorExpression__RightAssignment_1_2)
	{ after(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getCompExpressionParserRuleCall_0()); }
	ruleCompExpression
	{ after(grammarAccess.getAndExpressionAccess().getCompExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndOpAssignment_1_1()); }
	(rule__AndExpression__AndOpAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getAndOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group__0__Impl
	rule__CompExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getEquExpressionParserRuleCall_0()); }
	ruleEquExpression
	{ after(grammarAccess.getCompExpressionAccess().getEquExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getGroup_1()); }
	(rule__CompExpression__Group_1__0)*
	{ after(grammarAccess.getCompExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group_1__0__Impl
	rule__CompExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getCompExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompExpressionAccess().getCompExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group_1__1__Impl
	rule__CompExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getCompOpAssignment_1_1()); }
	(rule__CompExpression__CompOpAssignment_1_1)
	{ after(grammarAccess.getCompExpressionAccess().getCompOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getRightAssignment_1_2()); }
	(rule__CompExpression__RightAssignment_1_2)
	{ after(grammarAccess.getCompExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group__0__Impl
	rule__EquExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getUnExpressionParserRuleCall_0()); }
	ruleUnExpression
	{ after(grammarAccess.getEquExpressionAccess().getUnExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getGroup_1()); }
	(rule__EquExpression__Group_1__0)*
	{ after(grammarAccess.getEquExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group_1__0__Impl
	rule__EquExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getEquExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEquExpressionAccess().getEquExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group_1__1__Impl
	rule__EquExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getEquOpAssignment_1_1()); }
	(rule__EquExpression__EquOpAssignment_1_1)
	{ after(grammarAccess.getEquExpressionAccess().getEquOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getRightAssignment_1_2()); }
	(rule__EquExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEquExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnExpression__Group_1__0__Impl
	rule__UnExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnExpressionAccess().getUnOpAssignment_1_0()); }
	(rule__UnExpression__UnOpAssignment_1_0)
	{ after(grammarAccess.getUnExpressionAccess().getUnOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnExpressionAccess().getRightAssignment_1_1()); }
	(rule__UnExpression__RightAssignment_1_1)
	{ after(grammarAccess.getUnExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TauExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TauExpression__Group__0__Impl
	rule__TauExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTauExpressionAccess().getTAUKeyword_0()); }
	'TAU'
	{ after(grammarAccess.getTauExpressionAccess().getTAUKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TauExpression__Group__1__Impl
	rule__TauExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTauExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTauExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TauExpression__Group__2__Impl
	rule__TauExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTauExpressionAccess().getTimeAssignment_2()); }
	(rule__TauExpression__TimeAssignment_2)
	{ after(grammarAccess.getTauExpressionAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TauExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTauExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTauExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__0__Impl
	rule__TimeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getTIME_PREF_LITERALParserRuleCall_0()); }
	ruleTIME_PREF_LITERAL
	{ after(grammarAccess.getTimeLiteralAccess().getTIME_PREF_LITERALParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getIntervalAssignment_1()); }
	(rule__TimeLiteral__IntervalAssignment_1)
	{ after(grammarAccess.getTimeLiteralAccess().getIntervalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__0__Impl
	rule__PrimaryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__1__Impl
	rule__PrimaryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNestExprAssignment_3_1()); }
	(rule__PrimaryExpression__NestExprAssignment_3_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getNestExprAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReqDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDeclaration__Group__0__Impl
	rule__ReqDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqDeclarationAccess().getREQUIREMENTKeyword_0()); }
	'REQUIREMENT'
	{ after(grammarAccess.getReqDeclarationAccess().getREQUIREMENTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDeclaration__Group__1__Impl
	rule__ReqDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqDeclarationAccess().getNameAssignment_1()); }
	(rule__ReqDeclaration__NameAssignment_1)
	{ after(grammarAccess.getReqDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDeclaration__Group__2__Impl
	rule__ReqDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqDeclarationAccess().getRequirementAssignment_2()); }
	(rule__ReqDeclaration__RequirementAssignment_2)
	{ after(grammarAccess.getReqDeclarationAccess().getRequirementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReqDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReqDeclarationAccess().getEND_REQUIREMENTKeyword_3()); }
	'END_REQUIREMENT'
	{ after(grammarAccess.getReqDeclarationAccess().getEND_REQUIREMENTKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getAlternatives_0()); }
	(rule__Requirement__Alternatives_0)
	{ after(grammarAccess.getRequirementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Requirement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getRequirementAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trig__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trig__Group__0__Impl
	rule__Trig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrigAccess().getAlternatives_0()); }
	(rule__Trig__Alternatives_0)
	{ after(grammarAccess.getTrigAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trig__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrigAccess().getAlternatives_1()); }
	(rule__Trig__Alternatives_1)
	{ after(grammarAccess.getTrigAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trig__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trig__Group_0_0__0__Impl
	rule__Trig__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrigAccess().getAfterKeyword_0_0_0()); }
	'After'
	{ after(grammarAccess.getTrigAccess().getAfterKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trig__Group_0_0__1__Impl
	rule__Trig__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrigAccess().getNameAssignment_0_0_1()); }
	(rule__Trig__NameAssignment_0_0_1)
	{ after(grammarAccess.getTrigAccess().getNameAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trig__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrigAccess().getCOMMAParserRuleCall_0_0_2()); }
	ruleCOMMA
	{ after(grammarAccess.getTrigAccess().getCOMMAParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group__0__Impl
	rule__Inv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getInvAction_0()); }
	()
	{ after(grammarAccess.getInvAccess().getInvAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group__1__Impl
	rule__Inv__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getInvAssignment_1()); }
	(rule__Inv__InvAssignment_1)
	{ after(grammarAccess.getInvAccess().getInvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getAlternatives_2()); }
	(rule__Inv__Alternatives_2)?
	{ after(grammarAccess.getInvAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inv__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_0__0__Impl
	rule__Inv__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getCOMMAParserRuleCall_2_0_0()); }
	ruleCOMMA
	{ after(grammarAccess.getInvAccess().getCOMMAParserRuleCall_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getDelay_finalAssignment_2_0_1()); }
	(rule__Inv__Delay_finalAssignment_2_0_1)
	{ after(grammarAccess.getInvAccess().getDelay_finalAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inv__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_1__0__Impl
	rule__Inv__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getShouldKeyword_2_1_0()); }
	'should'
	{ after(grammarAccess.getInvAccess().getShouldKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_1__1__Impl
	rule__Inv__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getRemainKeyword_2_1_1()); }
	'remain'
	{ after(grammarAccess.getInvAccess().getRemainKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_1__2__Impl
	rule__Inv__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getValidKeyword_2_1_2()); }
	'valid'
	{ after(grammarAccess.getInvAccess().getValidKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_1__3__Impl
	rule__Inv__Group_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getUntilKeyword_2_1_3()); }
	'until'
	{ after(grammarAccess.getInvAccess().getUntilKeyword_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv__Group_2_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Group_2_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvAccess().getRelease_reactionAssignment_2_1_4()); }
	(rule__Inv__Release_reactionAssignment_2_1_4)
	{ after(grammarAccess.getInvAccess().getRelease_reactionAssignment_2_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inv_always__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group__0__Impl
	rule__Inv_always__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getInv_alwaysAction_0()); }
	()
	{ after(grammarAccess.getInv_alwaysAccess().getInv_alwaysAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getGroup_1()); }
	(rule__Inv_always__Group_1__0)
	{ after(grammarAccess.getInv_alwaysAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inv_always__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__0__Impl
	rule__Inv_always__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getInvAssignment_1_0()); }
	(rule__Inv_always__InvAssignment_1_0)
	{ after(grammarAccess.getInv_alwaysAccess().getInvAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__1__Impl
	rule__Inv_always__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getShouldKeyword_1_1()); }
	'should'
	{ after(grammarAccess.getInv_alwaysAccess().getShouldKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__2__Impl
	rule__Inv_always__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getAlwaysKeyword_1_2()); }
	'always'
	{ after(grammarAccess.getInv_alwaysAccess().getAlwaysKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__3__Impl
	rule__Inv_always__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getRemainKeyword_1_3()); }
	'remain'
	{ after(grammarAccess.getInv_alwaysAccess().getRemainKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__4__Impl
	rule__Inv_always__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getValidKeyword_1_4()); }
	'valid'
	{ after(grammarAccess.getInv_alwaysAccess().getValidKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__5__Impl
	rule__Inv_always__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getUntilKeyword_1_5()); }
	'until'
	{ after(grammarAccess.getInv_alwaysAccess().getUntilKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inv_always__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInv_alwaysAccess().getRelease_reactionAssignment_1_6()); }
	(rule__Inv_always__Release_reactionAssignment_1_6)
	{ after(grammarAccess.getInv_alwaysAccess().getRelease_reactionAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0__0__Impl
	rule__RelRea__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getEitherKeyword_0_0()); }
	'either'
	{ after(grammarAccess.getRelReaAccess().getEitherKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0__1__Impl
	rule__RelRea__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getRelAction_0_1()); }
	()
	{ after(grammarAccess.getRelReaAccess().getRelAction_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0__2__Impl
	rule__RelRea__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getRelAssignment_0_2()); }
	(rule__RelRea__RelAssignment_0_2)
	{ after(grammarAccess.getRelReaAccess().getRelAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0__3__Impl
	rule__RelRea__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getOrKeyword_0_3()); }
	'or'
	{ after(grammarAccess.getRelReaAccess().getOrKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0__4__Impl
	rule__RelRea__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getReactionAssignment_0_4()); }
	(rule__RelRea__ReactionAssignment_0_4)
	{ after(grammarAccess.getRelReaAccess().getReactionAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getGroup_0_5()); }
	(rule__RelRea__Group_0_5__0)?
	{ after(grammarAccess.getRelReaAccess().getGroup_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0_5__0__Impl
	rule__RelRea__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getCOMMAParserRuleCall_0_5_0()); }
	ruleCOMMA
	{ after(grammarAccess.getRelReaAccess().getCOMMAParserRuleCall_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getDelay_finalAssignment_0_5_1()); }
	(rule__RelRea__Delay_finalAssignment_0_5_1)
	{ after(grammarAccess.getRelReaAccess().getDelay_finalAssignment_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_1__0__Impl
	rule__RelRea__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getRelAction_1_0()); }
	()
	{ after(grammarAccess.getRelReaAccess().getRelAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getRelAssignment_1_1()); }
	(rule__RelRea__RelAssignment_1_1)
	{ after(grammarAccess.getRelReaAccess().getRelAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_2__0__Impl
	rule__RelRea__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getReaAction_2_0()); }
	()
	{ after(grammarAccess.getRelReaAccess().getReaAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getGroup_2_1()); }
	(rule__RelRea__Group_2_1__0)
	{ after(grammarAccess.getRelReaAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_2_1__0__Impl
	rule__RelRea__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getReactionAssignment_2_1_0()); }
	(rule__RelRea__ReactionAssignment_2_1_0)
	{ after(grammarAccess.getRelReaAccess().getReactionAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getGroup_2_1_1()); }
	(rule__RelRea__Group_2_1_1__0)?
	{ after(grammarAccess.getRelReaAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_2_1_1__0__Impl
	rule__RelRea__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getCOMMAParserRuleCall_2_1_1_0()); }
	ruleCOMMA
	{ after(grammarAccess.getRelReaAccess().getCOMMAParserRuleCall_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getDelay_finalAssignment_2_1_1_1()); }
	(rule__RelRea__Delay_finalAssignment_2_1_1_1)
	{ after(grammarAccess.getRelReaAccess().getDelay_finalAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3__0__Impl
	rule__RelRea__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getReaAction_3_0()); }
	()
	{ after(grammarAccess.getRelReaAccess().getReaAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getGroup_3_1()); }
	(rule__RelRea__Group_3_1__0)
	{ after(grammarAccess.getRelReaAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1__0__Impl
	rule__RelRea__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getReactionKeyword_3_1_0()); }
	'Reaction'
	{ after(grammarAccess.getRelReaAccess().getReactionKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1__1__Impl
	rule__RelRea__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getIsKeyword_3_1_1()); }
	'is'
	{ after(grammarAccess.getRelReaAccess().getIsKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1__2__Impl
	rule__RelRea__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getAlwaysKeyword_3_1_2()); }
	'always'
	{ after(grammarAccess.getRelReaAccess().getAlwaysKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1__3__Impl
	rule__RelRea__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getReaAssignment_3_1_3()); }
	(rule__RelRea__ReaAssignment_3_1_3)
	{ after(grammarAccess.getRelReaAccess().getReaAssignment_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getGroup_3_1_4()); }
	(rule__RelRea__Group_3_1_4__0)?
	{ after(grammarAccess.getRelReaAccess().getGroup_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelRea__Group_3_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1_4__0__Impl
	rule__RelRea__Group_3_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getCOMMAParserRuleCall_3_1_4_0()); }
	ruleCOMMA
	{ after(grammarAccess.getRelReaAccess().getCOMMAParserRuleCall_3_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelRea__Group_3_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Group_3_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelReaAccess().getDelay_finalAssignment_3_1_4_1()); }
	(rule__RelRea__Delay_finalAssignment_3_1_4_1)
	{ after(grammarAccess.getRelReaAccess().getDelay_finalAssignment_3_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__0__Impl
	rule__Reaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getReaAction_0()); }
	()
	{ after(grammarAccess.getReactionAccess().getReaAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__1__Impl
	rule__Reaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getReactionKeyword_1()); }
	'reaction'
	{ after(grammarAccess.getReactionAccess().getReactionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__2__Impl
	rule__Reaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getReactionAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getReaAssignment_3()); }
	(rule__Reaction__ReaAssignment_3)
	{ after(grammarAccess.getReactionAccess().getReaAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelFin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group__0__Impl
	rule__DelFin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getSentenceAction_0()); }
	()
	{ after(grammarAccess.getDelFinAccess().getSentenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getAlternatives_1()); }
	(rule__DelFin__Alternatives_1)
	{ after(grammarAccess.getDelFinAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelFin__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0__0__Impl
	rule__DelFin__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getGroup_1_0_0()); }
	(rule__DelFin__Group_1_0_0__0)
	{ after(grammarAccess.getDelFinAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getAlternatives_1_0_1()); }
	(rule__DelFin__Alternatives_1_0_1)
	{ after(grammarAccess.getDelFinAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelFin__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_0__0__Impl
	rule__DelFin__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getWhichKeyword_1_0_0_0()); }
	'which'
	{ after(grammarAccess.getDelFinAccess().getWhichKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_0__1__Impl
	rule__DelFin__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getMustKeyword_1_0_0_1()); }
	'must'
	{ after(grammarAccess.getDelFinAccess().getMustKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getOccurKeyword_1_0_0_2()); }
	'occur'
	{ after(grammarAccess.getDelFinAccess().getOccurKeyword_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelFin__Group_1_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_0__0__Impl
	rule__DelFin__Group_1_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getDelayAssignment_1_0_1_0_0()); }
	(rule__DelFin__DelayAssignment_1_0_1_0_0)
	{ after(grammarAccess.getDelFinAccess().getDelayAssignment_1_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getGroup_1_0_1_0_1()); }
	(rule__DelFin__Group_1_0_1_0_1__0)?
	{ after(grammarAccess.getDelFinAccess().getGroup_1_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelFin__Group_1_0_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_0_1__0__Impl
	rule__DelFin__Group_1_0_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getFromKeyword_1_0_1_0_1_0()); }
	'from'
	{ after(grammarAccess.getDelFinAccess().getFromKeyword_1_0_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getFinAssignment_1_0_1_0_1_1()); }
	(rule__DelFin__FinAssignment_1_0_1_0_1_1)
	{ after(grammarAccess.getDelFinAccess().getFinAssignment_1_0_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DelFin__Group_1_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_1__0__Impl
	rule__DelFin__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getImmediatelyKeyword_1_0_1_1_0()); }
	('immediately')?
	{ after(grammarAccess.getDelFinAccess().getImmediatelyKeyword_1_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_1__1__Impl
	rule__DelFin__Group_1_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getAfterKeyword_1_0_1_1_1()); }
	'after'
	{ after(grammarAccess.getDelFinAccess().getAfterKeyword_1_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DelFin__Group_1_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__Group_1_0_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelFinAccess().getFinAssignment_1_0_1_1_2()); }
	(rule__DelFin__FinAssignment_1_0_1_1_2)
	{ after(grammarAccess.getDelFinAccess().getFinAssignment_1_0_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delay__Group__0__Impl
	rule__Delay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayAccess().getWithinKeyword_0()); }
	'within'
	{ after(grammarAccess.getDelayAccess().getWithinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delay__Group__1__Impl
	rule__Delay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayAccess().getDelAction_1()); }
	()
	{ after(grammarAccess.getDelayAccess().getDelAction_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delay__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDelayAccess().getDelAssignment_2()); }
	(rule__Delay__DelAssignment_2)
	{ after(grammarAccess.getDelayAccess().getDelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DeclVarInputAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclVarInputDeclVarInputParserRuleCall_0_0()); }
		ruleDeclVarInput
		{ after(grammarAccess.getModelAccess().getDeclVarInputDeclVarInputParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclVarOutputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclVarOutputDeclVarOutputParserRuleCall_1_0()); }
		ruleDeclVarOutput
		{ after(grammarAccess.getModelAccess().getDeclVarOutputDeclVarOutputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SentDeclarationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSentDeclarationSentDeclarationParserRuleCall_2_0()); }
		ruleSentDeclaration
		{ after(grammarAccess.getModelAccess().getSentDeclarationSentDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ReqDeclarationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getReqDeclarationReqDeclarationParserRuleCall_3_0()); }
		ruleReqDeclaration
		{ after(grammarAccess.getModelAccess().getReqDeclarationReqDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarInput__VarDeclsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVarInputAccess().getVarDeclsVarDeclarationParserRuleCall_2_0_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getDeclVarInputAccess().getVarDeclsVarDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclVarOutput__VarDeclsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclVarOutputAccess().getVarDeclsVarDeclarationParserRuleCall_2_0_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getDeclVarOutputAccess().getVarDeclsVarDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getTypeVariableTypeParserRuleCall_2_0()); }
		ruleVariableType
		{ after(grammarAccess.getVarDeclarationAccess().getTypeVariableTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__DeclarationNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentDeclarationAccess().getDeclarationNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSentDeclarationAccess().getDeclarationNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentDeclaration__SentenceDeclarationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentDeclarationAccess().getSentenceDeclarationSentenceDeclarationParserRuleCall_3_0()); }
		ruleSentenceDeclaration
		{ after(grammarAccess.getSentDeclarationAccess().getSentenceDeclarationSentenceDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceDeclarationAccess().getNameSentenceParserRuleCall_1_0()); }
		ruleSentence
		{ after(grammarAccess.getSentenceDeclarationAccess().getNameSentenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceDeclaration__LogicExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceDeclarationAccess().getLogicExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSentenceDeclarationAccess().getLogicExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OrOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOrOpOR_OPERATORTerminalRuleCall_1_1_0()); }
		RULE_OR_OPERATOR
		{ after(grammarAccess.getExpressionAccess().getOrOpOR_OPERATORTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
		ruleXorExpression
		{ after(grammarAccess.getExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__AndOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getAndOpAND_OPERATORParserRuleCall_1_1_0()); }
		ruleAND_OPERATOR
		{ after(grammarAccess.getAndExpressionAccess().getAndOpAND_OPERATORParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightCompExpressionParserRuleCall_1_2_0()); }
		ruleCompExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightCompExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__CompOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompExpressionAccess().getCompOpCompOperatorEnumRuleCall_1_1_0()); }
		ruleCompOperator
		{ after(grammarAccess.getCompExpressionAccess().getCompOpCompOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getCompExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__EquOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquExpressionAccess().getEquOpEquOperatorEnumRuleCall_1_1_0()); }
		ruleEquOperator
		{ after(grammarAccess.getEquExpressionAccess().getEquOpEquOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquExpressionAccess().getRightUnExpressionParserRuleCall_1_2_0()); }
		ruleUnExpression
		{ after(grammarAccess.getEquExpressionAccess().getRightUnExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpression__UnOpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnExpressionAccess().getUnOpUnOperatorParserRuleCall_1_0_0()); }
		ruleUnOperator
		{ after(grammarAccess.getUnExpressionAccess().getUnOpUnOperatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TauExpression__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTauExpressionAccess().getTimeTimeLiteralParserRuleCall_2_0()); }
		ruleTimeLiteral
		{ after(grammarAccess.getTauExpressionAccess().getTimeTimeLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__IntervalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLiteralAccess().getIntervalINTERVALTerminalRuleCall_1_0()); }
		RULE_INTERVAL
		{ after(grammarAccess.getTimeLiteralAccess().getIntervalINTERVALTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNameVarDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPrimaryExpressionAccess().getNameVarDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryExpressionAccess().getNameVarDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPrimaryExpressionAccess().getNameVarDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ConstantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstantConstantParserRuleCall_1_0()); }
		ruleConstant
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstantConstantParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TauAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getTauTauExpressionParserRuleCall_2_0()); }
		ruleTauExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getTauTauExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NestExprAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNestExprExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getNestExprExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReqDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReqDeclaration__RequirementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReqDeclarationAccess().getRequirementRequirementParserRuleCall_2_0()); }
		ruleRequirement
		{ after(grammarAccess.getReqDeclarationAccess().getRequirementRequirementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__TriggerAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getTriggerTrigParserRuleCall_0_0_0()); }
		ruleTrig
		{ after(grammarAccess.getRequirementAccess().getTriggerTrigParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__InvariantAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getInvariantInv_alwaysParserRuleCall_0_1_0()); }
		ruleInv_always
		{ after(grammarAccess.getRequirementAccess().getInvariantInv_alwaysParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__NameAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrigAccess().getNameSentenceDeclarationCrossReference_0_0_1_0()); }
		(
			{ before(grammarAccess.getTrigAccess().getNameSentenceDeclarationSentenceParserRuleCall_0_0_1_0_1()); }
			ruleSentence
			{ after(grammarAccess.getTrigAccess().getNameSentenceDeclarationSentenceParserRuleCall_0_0_1_0_1()); }
		)
		{ after(grammarAccess.getTrigAccess().getNameSentenceDeclarationCrossReference_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__InvariantAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrigAccess().getInvariantInvParserRuleCall_1_0_0()); }
		ruleInv
		{ after(grammarAccess.getTrigAccess().getInvariantInvParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Release_reactionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrigAccess().getRelease_reactionRelReaParserRuleCall_1_1_0()); }
		ruleRelRea
		{ after(grammarAccess.getTrigAccess().getRelease_reactionRelReaParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trig__Delay_finalAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrigAccess().getDelay_finalDelFinParserRuleCall_1_2_0()); }
		ruleDelFin
		{ after(grammarAccess.getTrigAccess().getDelay_finalDelFinParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__InvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvAccess().getInvSentenceDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getInvAccess().getInvSentenceDeclarationSentenceParserRuleCall_1_0_1()); }
			ruleSentence
			{ after(grammarAccess.getInvAccess().getInvSentenceDeclarationSentenceParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getInvAccess().getInvSentenceDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Delay_finalAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvAccess().getDelay_finalDelFinParserRuleCall_2_0_1_0()); }
		ruleDelFin
		{ after(grammarAccess.getInvAccess().getDelay_finalDelFinParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv__Release_reactionAssignment_2_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvAccess().getRelease_reactionRelReaParserRuleCall_2_1_4_0()); }
		ruleRelRea
		{ after(grammarAccess.getInvAccess().getRelease_reactionRelReaParserRuleCall_2_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__InvAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInv_alwaysAccess().getInvSentenceDeclarationCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getInv_alwaysAccess().getInvSentenceDeclarationSentenceParserRuleCall_1_0_0_1()); }
			ruleSentence
			{ after(grammarAccess.getInv_alwaysAccess().getInvSentenceDeclarationSentenceParserRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getInv_alwaysAccess().getInvSentenceDeclarationCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inv_always__Release_reactionAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInv_alwaysAccess().getRelease_reactionRelReaParserRuleCall_1_6_0()); }
		ruleRelRea
		{ after(grammarAccess.getInv_alwaysAccess().getRelease_reactionRelReaParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__RelAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getRelSentenceDeclarationCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getRelReaAccess().getRelSentenceDeclarationSentenceParserRuleCall_0_2_0_1()); }
			ruleSentence
			{ after(grammarAccess.getRelReaAccess().getRelSentenceDeclarationSentenceParserRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getRelReaAccess().getRelSentenceDeclarationCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__ReactionAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getReactionReactionParserRuleCall_0_4_0()); }
		ruleReaction
		{ after(grammarAccess.getRelReaAccess().getReactionReactionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Delay_finalAssignment_0_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getDelay_finalDelFinParserRuleCall_0_5_1_0()); }
		ruleDelFin
		{ after(grammarAccess.getRelReaAccess().getDelay_finalDelFinParserRuleCall_0_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__RelAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getRelSentenceDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getRelReaAccess().getRelSentenceDeclarationSentenceParserRuleCall_1_1_0_1()); }
			ruleSentence
			{ after(grammarAccess.getRelReaAccess().getRelSentenceDeclarationSentenceParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getRelReaAccess().getRelSentenceDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__ReactionAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getReactionReactionParserRuleCall_2_1_0_0()); }
		ruleReaction
		{ after(grammarAccess.getRelReaAccess().getReactionReactionParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Delay_finalAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getDelay_finalDelFinParserRuleCall_2_1_1_1_0()); }
		ruleDelFin
		{ after(grammarAccess.getRelReaAccess().getDelay_finalDelFinParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__ReaAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getReaSentenceDeclarationCrossReference_3_1_3_0()); }
		(
			{ before(grammarAccess.getRelReaAccess().getReaSentenceDeclarationSentenceParserRuleCall_3_1_3_0_1()); }
			ruleSentence
			{ after(grammarAccess.getRelReaAccess().getReaSentenceDeclarationSentenceParserRuleCall_3_1_3_0_1()); }
		)
		{ after(grammarAccess.getRelReaAccess().getReaSentenceDeclarationCrossReference_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelRea__Delay_finalAssignment_3_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelReaAccess().getDelay_finalDelFinParserRuleCall_3_1_4_1_0()); }
		ruleDelFin
		{ after(grammarAccess.getRelReaAccess().getDelay_finalDelFinParserRuleCall_3_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__ReaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getReaSentenceDeclarationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getReactionAccess().getReaSentenceDeclarationSentenceParserRuleCall_3_0_1()); }
			ruleSentence
			{ after(grammarAccess.getReactionAccess().getReaSentenceDeclarationSentenceParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getReactionAccess().getReaSentenceDeclarationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__DelayAssignment_1_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelFinAccess().getDelayDelayParserRuleCall_1_0_1_0_0_0()); }
		ruleDelay
		{ after(grammarAccess.getDelFinAccess().getDelayDelayParserRuleCall_1_0_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__FinAssignment_1_0_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelFinAccess().getFinSentenceDeclarationCrossReference_1_0_1_0_1_1_0()); }
		(
			{ before(grammarAccess.getDelFinAccess().getFinSentenceDeclarationSentenceParserRuleCall_1_0_1_0_1_1_0_1()); }
			ruleSentence
			{ after(grammarAccess.getDelFinAccess().getFinSentenceDeclarationSentenceParserRuleCall_1_0_1_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getDelFinAccess().getFinSentenceDeclarationCrossReference_1_0_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__FinAssignment_1_0_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelFinAccess().getFinSentenceDeclarationCrossReference_1_0_1_1_2_0()); }
		(
			{ before(grammarAccess.getDelFinAccess().getFinSentenceDeclarationSentenceParserRuleCall_1_0_1_1_2_0_1()); }
			ruleSentence
			{ after(grammarAccess.getDelFinAccess().getFinSentenceDeclarationSentenceParserRuleCall_1_0_1_1_2_0_1()); }
		)
		{ after(grammarAccess.getDelFinAccess().getFinSentenceDeclarationCrossReference_1_0_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DelFin__FinAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelFinAccess().getFinSentenceDeclarationCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getDelFinAccess().getFinSentenceDeclarationSentenceParserRuleCall_1_1_0_1()); }
			ruleSentence
			{ after(grammarAccess.getDelFinAccess().getFinSentenceDeclarationSentenceParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getDelFinAccess().getFinSentenceDeclarationCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__DelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDelayAccess().getDelSentenceDeclarationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDelayAccess().getDelSentenceDeclarationSentenceParserRuleCall_2_0_1()); }
			ruleSentence
			{ after(grammarAccess.getDelayAccess().getDelSentenceDeclarationSentenceParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDelayAccess().getDelSentenceDeclarationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OR_OPERATOR : ('||'|'OR');

RULE_INTERVAL : (RULE_INTEGER 'd')? (RULE_INTEGER 'h')? (RULE_INTEGER 'm')? (RULE_INTEGER 's')? (RULE_INTEGER 'ms')?;

RULE_INTEGER : RULE_DIGIT+;

fragment RULE_DIGIT : '0'..'9';

RULE_BOOLEAN_LITERAL : ('TRUE'|'FALSE');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
